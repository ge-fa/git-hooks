## -*- mode: shell-script -*-

#HOST="www"
#DISTANT_REPO_DIR=""
#TARGET_BRANCH="master"

## XXXvlab: find another solution
#SOURCE_REPO_FOR_TARGET_REPO=""

## All variables listed here will be checked for existence
required_variables="HOST DISTANT_REPO_DIR TARGET_BRANCH SOURCE_REPO_FOR_TARGET_REPO"

logfile=/tmp/logfile
## post-receive_ref function gets called for each ref pushed with these variables set
##     oldrev, newrev, refname
post-receive_ref() {

    if [ "$refname" = "refs/heads/$TARGET_BRANCH" ]; then
        echo "Ref $refname triggers sync-workdir hook towards $HOST:$DISTANT_REPO_DIR"
	cat <<EOF | ssh "$HOST" | divert_to_log

           DISTANT_REPO_DIR=$DISTANT_REPO_DIR
           if [ -d "\$DISTANT_REPO_DIR" ]; then
               cd "\$DISTANT_REPO_DIR" &&
               git fetch
           else
	       git clone $SOURCE_REPO_FOR_TARGET_REPO "\$DISTANT_REPO_DIR" &&
               cd "\$DISTANT_REPO_DIR"
           fi &&
           git checkout $TARGET_BRANCH &&
           git reset --hard origin/$TARGET_BRANCH

	   test -x ./autogen.sh && ./autogen.sh
EOF

    fi

}

## post-receive_post function gets called once per push after refs.
#post-receive_post() {
#  :
#}


## Setup the hook when in a gitdir. This is launched thanks to the
##  ``git-hooks add <my-hook-name> ...``
##
## Note: this command should create the ``<my-hook>.conf`` file thanks to the
##   ``init_action`` command.
## Receives:
##   $hook_name
install() {

    local usage branch hostdir host dir revhost

    ## XXXvlab: remove reverse_host !
    usage="$command_prefix BRANCH HOST:DIR REVERSE_HOST"

    if [ "$#" != 3  ]; then
        echo "Wrong number of arguments"
        echo "usage: $usage"
        exit 1
    fi

    branch=$1
    hostdir=$2
    revhost=$3

    host=$(echo $2 | cut -f 1 -d ":")
    dir=$(echo $2 | cut -f 2- -d ":")

    make_ssh_connection_work "$host" || exit 1

    init_action "$dir" <<EOF

HOST="$host"
DISTANT_REPO_DIR="$dir"
TARGET_BRANCH="$branch"

## XXXvlab: find another solution
SOURCE_REPO_FOR_TARGET_REPO="$revhost"

EOF

}
