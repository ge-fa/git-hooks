## -*- mode: shell-script -*-

## All variables listed here will be checked for existence
required_variables="HOST DISTANT_TARGET_DIR"

## post-receive_ref function gets called for each pushed ref.
## These variables will be set accordingly:
##     $oldrev, $newrev, $refname
post-receive_ref() {

    is_branch "$refname" || return

    branch_name=$(get_bare_name "$refname")

    branch_dir="$DISTANT_TARGET_DIR/$branch_name"
    target_repository="$branch_dir/$COMPONENT_NAME"

    ssh "$HOST" "mkdir -p '$branch_dir'; [ -d '$target_repository' ]"

    has_repo=$?
    if [ "$has_repo" != "0" ]; then
        pid="$$"
        local_tmp_dir="$tmpdir/$pid"
        mkdir "$tmpdir/$pid"
        git clone -q "$CURRENT_REPO_PATH" "$local_tmp_dir/$COMPONENT_NAME"
        (cd "$local_tmp_dir/$COMPONENT_NAME" &&
         git checkout -q "$branch_name")
        scp -r "$local_tmp_dir/$COMPONENT_NAME" \
            "$HOST:$DISTANT_TARGET_DIR/$branch_name/"
        rm -rf "$local_tmp_dir/"
    fi

    ssh "$HOST" "

           if [ -d \"$target_repository\" ]; then
               cd \"$target_repository\" &&
               git fetch -q &&
               git checkout -q \"$branch_name\" &&
               git reset --hard \"origin/$branch_name\"
           else
               echo \"Unsuspected error: '$target_repository' is not found.\"
               exit 1
           fi

	   test -x ./autogen.sh && ./autogen.sh

" | divert_to_log

}

## post-receive_post function gets called once per push after refs.
# post-receive_post() {
#   :
# }


## Setup the hook when in a gitdir. This is launched thanks to the
##  ``git-hooks add <my-hook-name> ...``
##
## Note: this command should create the ``<my-hook>.conf`` file thanks to the
##   ``init_action`` command.
## Receives:
##   $hook_name
install() {
    local usage distant_target_dir host

    usage="$command_prefix HOST DISTANT_TARGET_DIR"

    if [ "$#" != 2  ]; then
        echo "Wrong number of arguments" >&2
        echo "usage: $usage" >&2
        exit 1
    fi

    host=$1
    distant_target_dir=$2

    make_ssh_connection_work "$host" || exit 1

    init_action "$host:$dir" <<EOF

HOST="$host"
DISTANT_TARGET_DIR="$distant_target_dir"

EOF

}
